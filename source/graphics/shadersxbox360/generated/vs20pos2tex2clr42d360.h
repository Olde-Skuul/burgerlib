#if 0
//
// Generated by 2.0.21256.0
//
//   fxc ..\source\graphics\shadersxbox360\vs20pos2tex2clr42d360.x360sl /nologo
//    /FhD:\oldeskuul\libs\burgerlib\source\graphics\shadersxbox360\Generated\vs20pos2tex2clr42d360.h
//    /XFdD:\oldeskuul\libs\burgerlib\projects\temp\burgerv10x36cod\vs20pos2tex2clr42d360.updb
//    /Vng_vs20pos2tex2clr42d360 /Tvs_2_0
//
//
// Parameters:
//
//   float4 XYWidthHeight;
//
//
// Registers:
//
//   Name          Reg   Size
//   ------------- ----- ----
//   XYWidthHeight c0       1
//

// Shader type: vertex 

xvs_3_0
defconst XYWidthHeight, float, vector, [1, 4], c0
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, -2, 2, -1, 1


    exec
    vfetch r2.xy__, r0.x, position
    vfetch r1.xy__, r0.x, texcoord
    vfetch r0, r0.x, color
    alloc position
    exec
    mad r1.z, c0.x, c255.y, c255.z
    mad r1.w, c0.y, c255.x, c255.w
    mad oPos.xy01, r2.xy, c0.zw, r1.zw
    alloc interpolators
    exece
    mov o0.xy, r1.xy
    mov o1, r0

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD g_vs20pos2tex2clr42d360[] =
{
    0x102a1101, 0x000000f8, 0x000000d0, 0x00000000, 0x00000024, 0x0000008c, 
    0x000000b4, 0x00000000, 0x00000000, 0x00000064, 0x0000001c, 0x00000057, 
    0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000050, 0x00000030, 
    0x00020000, 0x00010000, 0x00000040, 0x00000000, 0x58595769, 0x64746848, 
    0x65696768, 0x7400abab, 0x00010003, 0x00010004, 0x00010000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x31323536, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000090, 0x00110002, 
    0x00000000, 0x00000000, 0x00001842, 0x00000001, 0x00000003, 0x00000002, 
    0x00000290, 0x00100003, 0x00005004, 0x0030a005, 0x00003050, 0x0001f1a0, 
    0x00001009, 0x0000100a, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0xc0000000, 0x40000000, 0xbf800000, 0x3f800000, 
    0x70153003, 0x00001200, 0xc2000000, 0x00003006, 0x00001200, 0xc4000000, 
    0x00002009, 0x00002200, 0x00000000, 0x05f82000, 0x00000fc8, 0x00000000, 
    0x05f81000, 0x00000fc8, 0x00000000, 0x05f80000, 0x00000688, 0x00000000, 
    0xc8040001, 0x006cb1c6, 0x0b00ffff, 0xc8080001, 0x00b16c1b, 0x0b00ffff, 
    0xc88bc03e, 0x00b01a1a, 0xab020001, 0xc8038000, 0x00b0b000, 0xe2010100, 
    0xc80f8001, 0x00000000, 0xe2000000, 0x00000000, 0x00000000, 0x00000000
};
