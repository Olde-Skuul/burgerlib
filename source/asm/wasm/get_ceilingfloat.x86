;
; X86 assembly for Open Watcom
;
; Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com
;
; Build with wasm.exe
;
; float BURGER_API Burger::get_ceiling(float fInput) BURGER_NOEXCEPT
; all registers are non-volatile
; Result in 8087 FPU
; fInput = [esp+4]
;

	.686
	.MODEL FLAT,SYSCALL

	.data

; Actually Burger::g_fOne
	EXTRN	`W?g_fOne$:Burger$nx$uint32_float_t$:1$`:DWORD

_TEXT segment para 'CODE'

	align 16
public `W?get_ceiling$:Burger$n(b)b`
`W?get_ceiling$:Burger$n(b)b` proc

; Load the value in an integer register
	mov		eax, [esp + 4]

; Load the same value in the FPU
	fld		dword ptr[esp + 4]

; Mask off the sign
	and		eax, 0x7FFFFFFF

; Compare to 8388608.0f
	cmp		eax, 0x4B000000

; Out of range, return original value
	jae		CeilExit

; Convert the integer to float (It's in range)
	frndint

; Clear ax for flags
	xor		eax, eax

; Compare values for difference (Pop stack)
	fcom	dword ptr[esp + 4]
	fnstsw	ax

; Was the new less than the original?
	and		eax, 0x100
	jz		CeilExit

; Add 1.0f to round up
	fadd	dword ptr[`W?g_fOne$:Burger$nx$uint32_float_t$:1$`]
CeilExit:
	ret		4

`W?get_ceiling$:Burger$n(b)b` endp

_TEXT	ends

	end
