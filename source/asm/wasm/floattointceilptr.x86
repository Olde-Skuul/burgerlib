;
; X86 assembly for Open Watcom
;
; Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com
;
; Build with wasm.exe
;
; void BURGER_API Burger::float_to_int_ceil(int32_t* pOutput, float fInput) BURGER_NOEXCEPT
; all registers are non-volatile
; Result in 8087 FPU
; pOutput = eax
; fInput = [esp+4]
;

	.686
	.MODEL FLAT,SYSCALL

_TEXT segment para 'CODE'

	align 16
public `W?float_to_int_ceil$:Burger$n(pnib)v`
`W?float_to_int_ceil$:Burger$n(pnib)v` proc

; Get the input value
	fld		dword ptr[esp + 4]

; Load the same value in the FPU
	fld		st(0)

; Convert the float to integer
	frndint

; Store the integer (Leave a copy in the FPU)
	fist	dword ptr[esp + 4]

; Compare the integer to the input and pop
	fcomip	st(0), st(1)

; Clean up the FP stack
	fstp	st(0)

; Save registers
	push	ecx

; Get the integer
	mov		ecx, dword ptr[esp + 4 + 4]

; Need to update the rounding?
	jae		NoExtra

; ++1
	inc		ecx
NoExtra:
; Store in the pointer
	mov		dword ptr[eax], ecx

; Restore registers
	pop		ecx
	ret		4

`W?float_to_int_ceil$:Burger$n(pnib)v` endp

_TEXT	ends

	end
