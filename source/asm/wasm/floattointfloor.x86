;
; X86 assembly for Open Watcom
;
; Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com
;
; Build with wasm.exe
;
; int32_t BURGER_API Burger::float_to_int_floor(float fInput) BURGER_NOEXCEPT
; all registers are non-volatile
; Result in eax
; fInput = [esp+4]
;

	.686
	.MODEL FLAT,SYSCALL

_TEXT segment para 'CODE'

	align 16
public `W?float_to_int_floor$:Burger$n(b)i`
`W?float_to_int_floor$:Burger$n(b)i` proc

; Get the input value
	fld 	dword ptr[esp + 4]

; Load the same value in the FPU
	fld		st(0)

; Convert the float to integer
	frndint

 ; Store the integer (Leave a copy in the FPU)
	fist	dword ptr[esp + 4]

; Compare the integer to the input and pop
	fcomip	st(0), st(1)

; Get the integer
	mov		eax, dword ptr[esp + 4]

; Need to update the rounding?
	jbe		NoExtra

; --1
	dec		eax

; Clean up the FP stack
NoExtra:
	fstp	st(0)
	ret		4

`W?float_to_int_floor$:Burger$n(b)i` endp

_TEXT	ends

	end
