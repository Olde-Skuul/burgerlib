;
; X86 assembly for implementing the function
; Burger::_swapendiandouble(double) for Visual Studio x86
;
; Build with masm.exe
;
; double Burger::_swapendiandouble(double fInput)
;

	.686

_TEXT segment para 'CODE'

	align 16
public ?_swapendiandouble@Burger@@YINN@Z
?_swapendiandouble@Burger@@YINN@Z proc

; Fetch the double
	mov eax, dword ptr[esp + 4]
	mov edx, dword ptr[esp + 8]

; Swap the lower 32 bits
	bswap eax

; Get the return address
	mov ecx, dword ptr[esp]

; Swap the upper 32 bits
	bswap edx

; Store double, swapped
	mov dword ptr[esp + 8], eax
	mov dword ptr[esp + 4], edx

; Load the double into the FPU
	fld qword ptr[esp + 4]

; Fix the stack
	add esp, 12

; Exit
	jmp ecx

?_swapendiandouble@Burger@@YINN@Z endp

_TEXT ends

	end
