;
; X86 assembly for Visual Studio
;
; Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com
;
; Build with ml.exe
;
; extern "C" uint64_t __cdecl _swapendian64(uint64_t uInput) BURGER_NOEXCEPT
; eax, ecx and edx are volatile
; uInput = [esp+4]
; Result in eax:edx (lo:high)
;
; Note: While this code works perfectly, using it can cause bad code to be
; generated by the VC 2003 compiler. Look in brintrinsics.h for the evil hack
; that allows VC 2003 to pass all unit tests.
;

	.686

_TEXT segment para 'CODE'

	align 16
public __swapendian64
__swapendian64 proc

; Fetch the 64 bit value, backwards (Lo/Hi swapped)
	mov		eax, [esp+8]
	mov		edx, [esp+4]

; Do the endian swap and return in eax/edx
	bswap	edx
	bswap	eax
	ret

__swapendian64 endp

_TEXT ends

	end
