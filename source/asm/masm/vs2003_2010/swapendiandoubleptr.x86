;
; X86 assembly for Visual Studio
;
; Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com
;
; Build with ml.exe
;
; double Burger::_swapendiandouble(const double* pInput)
; eax, ecx and edx are volatile
; pInput = ecx
; Result in 8087 FPU
;

	.686

_TEXT segment para 'CODE'

	align 16
public ?_swapendiandouble@Burger@@YINPBN@Z
?_swapendiandouble@Burger@@YINPBN@Z proc

; Fetch the double
	mov		eax, dword ptr[ecx]
	mov		edx, dword ptr[ecx + 4]

; Swap the 64 bits
	bswap	eax
	bswap	edx

; Store double, swapped
	push	eax
	push	edx

; Load the double into the FPU
	fld		qword ptr[esp]

; Fix the stack and exit
	add		esp, 8
	ret

?_swapendiandouble@Burger@@YINPBN@Z endp

_TEXT ends

	end
