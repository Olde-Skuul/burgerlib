;
; X86 assembly for Visual Studio
;
; Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com
;
; Build with ml.exe
;
; double BURGER_API Burger::get_floor(double dInput)
; eax, ecx and edx are volatile
; dInput = [esp+4]
; Result in 8087 FPU
;

	.686
	.MODEL FLAT

	.data

; Actually Burger::g_u8087RoundToNegativeInfinity
	EXTRN	?g_u8087RoundToNegativeInfinity@Burger@@3GB:WORD

_TEXT segment para 'CODE'

	align 16
public ?get_floor@Burger@@YINN@Z
?get_floor@Burger@@YINN@Z proc

; Load the same value in the FPU
	fld		qword ptr[esp+4]

; Save the current 8087 control word
	fstcw	word ptr[esp+4]

; Force round to negative infinity
	fldcw	[?g_u8087RoundToNegativeInfinity@Burger@@3GB]

; Perform the rounding
	frndint

; Restore the old 8087 control word
	fldcw	word ptr[esp+4]
	ret		8

?get_floor@Burger@@YINN@Z endp

_TEXT ends

	end
