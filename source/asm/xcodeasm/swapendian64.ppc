/*
	PowerPC assembly for implementing the intrinsic _swapendian64 for
	MacOSX Darwin

	Build with XCode tool chain

	XCode uses a C++ parser and will try to assemble this file on all
	CPU types, so test for the proper CPU type before invoking any cpu
	instructions.

	extern "C" uint64_t _swapendian64(uint64_t uInput) BURGER_NOEXCEPT;

	Power PC 32 bit version. Input and output are r3,r4
*/

#if defined(__ppc__)
	.align 2
	.text

	.globl __swapendian64
__swapendian64:

/* Perform the endian swap on both 32 bit registers */

/* 4,1,2,3 <- 1,2,3,4 */
	rlwinm	r0,r3,24,0,31
	rlwinm	r12,r4,24,0,31

/* 4,3,2,3 <- 1,2,3,4 (Only copy bits 8-15) */
	rlwimi	r0,r3,8,8,15
	rlwimi	r12,r4,8,8,15

/* 4,3,2,1 <- 1,2,3,4 (Only copy bits 24-31) */
	rlwimi	r0,r3,8,24,31
	rlwimi	r12,r4,8,24,31

/* Return them, word swapped! */
	mr		r3,r12
	mr		r4,r0
	blr

#elif defined(__ppc64__)

	.align 2
	.text

	.globl __swapendian64
__swapendian64:

	srdi	r4,r3,32
	
/* 4,1,2,3 <- 1,2,3,4 */
	rlwinm	r0,r3,24,0,31
	rlwinm	r12,r4,24,0,31

/* 4,3,2,3 <- 1,2,3,4 (Only copy bits 8-15) */
	rlwimi	r0,r3,8,8,15
	rlwimi	r12,r4,8,8,15

/* 4,3,2,1 <- 1,2,3,4 (Only copy bits 24-31) */
	rlwimi	r0,r3,8,24,31
	rlwimi	r12,r4,8,24,31

	sldi	r3,r0,32
	or		r3,r3,r12
	blr

#endif
