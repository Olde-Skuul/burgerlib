/***************************************

	Assembly for MacOSX Darwin

	Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com

	Build with XCode tool chain

	XCode uses a C++ parser and will try to assemble this file on all
	CPU types, so test for the proper CPU type before invoking any cpu
	instructions.

	float BURGER_API Burger::get_floor(float fInput) BURGER_NOEXCEPT

***************************************/

/***************************************

	PowerPC 32/64 version
	
	r0, r3-12, fp0-fp13 are volatile
	Result in fp1
	dInput = fp1

***************************************/

#if defined(__ppc__) || defined(__ppc64__)
	.align 2
	.text

	.globl __ZN6Burger9get_floorEf
__ZN6Burger9get_floorEf:

	lis		r3, ha16(__ZN6Burger15g_fMinNoIntegerE)

/* Get the abs value to test */
	fabs	f0, f1

/* Load 8388608.0f */
	lfs		f2, lo16(__ZN6Burger15g_fMinNoIntegerE)(r3)

/* Compare if already floored */
	fcmpu	cr0, f0, f2

/* Exit with the value untouched if larger */
	bgelr

/* Save the rounding register */
	mffs	f4

/* Set bits 30 and 31 to Round toward -infinity */
	mtfsfi	7, 0x03

/* Push the positive number to highest value without */
/* fraction (Removes fraction) */
	fadds	f3, f1, f2

/* Push the negative number to the lowest value without */
/* fraction (Removes fraction) */
	fsubs	f0, f1, f2

/* Undo the push (Fraction is gone) */
	fsubs	f3, f3, f2

/* Undo the push (Fraction is gone) */
	fadds	f0, f0, f2

/* Which one to use? Positive or negative? */
	fsel	f1, f1, f3, f0

/* Restore rounding */
	mtfsf	255, f4
	blr

#endif

/***************************************

	Intel 32 bit version

	eax, ecx and edx are volatile
	pResult in 8087 FPU
	fInput = 4(%esp)

***************************************/

#if defined(__i386__)
	.align	4,0x90
	.globl __ZN6Burger9get_floorEf
__ZN6Burger9get_floorEf:

/* Load the same value in the FPU */
	flds	4(%esp)

/* Save the current 8087 control word */
	fstcw	4(%esp)

/* Force round to negative infinity */
	fldcw	(__ZN6Burger30g_u8087RoundToNegativeInfinityE)

/* Perform the rounding */
	frndint

/* Restore the old 8087 control word */
	fldcw	4(%esp)
	ret

#endif
