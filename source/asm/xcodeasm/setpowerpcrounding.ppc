/***************************************

	Assembly for MacOSX Darwin

	Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com

	Build with XCode tool chain

	XCode uses a C++ parser and will try to assemble this file on all
	CPU types, so test for the proper CPU type before invoking any cpu
	instructions.

	ePowerPCRounding BURGER_API Burger::set_PowerPC_rounding(ePowerPCRounding uInput) BURGER_NOEXCEPT

***************************************/

/***************************************

	PowerPC 32/64 version
	
	r0, r3-12, fp0-fp13 are volatile
	Result in r3
	uInput = r3

***************************************/

#if defined(__ppc__) || defined(__ppc64__)
	.align 2
	.text

	.globl __ZN6Burger20set_PowerPC_roundingENS_16ePowerPCRoundingE
__ZN6Burger20set_PowerPC_roundingENS_16ePowerPCRoundingE:

/* Get the floating point control register */
	mffs	f0

/* Store it in memory */
	stfd	f0, -8(r1)

/* Load into an integer register */
	lwz		r4, -4(r1)

/* Get the return value, mask off the lowest 2 bits (AND & 3) */
	clrlwi	r5, r4, 30

/* Move the lowest 2 bits into the existing value */
	insrwi	r4, r3, 2, 30

/* Store it in memory */
	stw		r4, -4(r1)

/* Reload the fp register */
	lfd		f0, -8(r1)

/* Set the flags */
	mtfsf	255, f0

/* Return the previous value */
	mr		r3, r5
	blr

#endif
