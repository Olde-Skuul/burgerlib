;
; X64 assembly for Visual Studio
;
; Copyright 1995-2025 by Rebecca Ann Heineman becky@burgerbecky.com
;
; Build with ml.exe
;
; uint32_t BURGER_API Burger::bit_reverse(uint32_t, uint_t) BURGER_NOEXCEPT
; rax, rcx, rdx, r8-11 are volatile
; uInput = rcx
; Result in rax
;

_TEXT segment para 'CODE'

	align 16
public ?bit_reverse@Burger@@YAIII@Z
?bit_reverse@Burger@@YAIII@Z proc

; Initialize the result
	xor		eax, eax

; Shift out a bit
BitReverse32:
	shr		ecx, 1

; Shift into the result
	adc		eax, eax

; Count down the iterator
	dec		edx
	jne		BitReverse32
	ret

?bit_reverse@Burger@@YAIII@Z endp

_TEXT ends

	end
