;
; PowerPC assembly for Metrowerks Codewarrior
;
; Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com
;
; Build with PPCAsm in Metrowerks Codewarrior 10 for MacOSX Carbon
;
; float Burger::get_ceiling(float fInput) BURGER_NOEXCEPT
; r0, r3-12, fp0-fp13 are volatile
; fInput = fp1
; Result in fp1
;

	IMPORT g_fMinNoInteger__6Burger

	EXPORT get_ceiling__6BurgerFf[DS]
	EXPORT .get_ceiling__6BurgerFf[PR]

	TOC
	tc		get_ceiling__6BurgerFf[TC], get_ceiling__6BurgerFf[DS]
	tc		g_fMinNoInteger__6Burger[TC],g_fMinNoInteger__6Burger

	CSECT	get_ceiling__6BurgerFf[DS]
	dc.l	.get_ceiling__6BurgerFf[PR]
	dc.l	TOC[tc0]

	CSECT	.get_ceiling__6BurgerFf[PR]

; Get the address of g_fMinNoInteger
	lwz		r3, g_fMinNoInteger__6Burger[TC](RTOC)

; Get the abs value to test
	fabs	fp0, fp1

; Load 8388608.0f
	lfs		fp2, 0(r3)

; Check if it has no fraction
	fcmpu	cr0, fp0, fp2

; Exit with the original if no fraction is found
	bgelr

; Save the rounding register
	mffs	fp4

; Set bits 30 and 31 to Round toward +infinity
	mtfsfi	7, 0x02

; Push the positive number to highest value without fraction
; (Removes fraction)
	fadds	fp3, fp1, fp2

; Push the negative number to the lowest value without fraction
; (Removes fraction)
	fsubs	fp0, fp1, fp2

; Undo the push (Fraction is gone)
	fsubs	fp3, fp3, fp2

; Undo the push (Fraction is gone)
	fadds	fp0, fp0, fp2

; Which one to use? Positive or negative?
	fsel	fp1, fp1, fp3, fp0

; Restore rounding
	mtfsf	255, fp4

; Exit
	blr

	END
