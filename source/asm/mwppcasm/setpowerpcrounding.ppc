;
; PowerPC32 assembly for Metrowerks tool chain
;
; Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com
;
; Build with Metrowerks Codewarrior 10 for MacOSX Carbon
;
; ePowerPCRounding Burger::set_PowerPC_rounding(ePowerPCRounding uInput) BURGER_NOEXCEPT
; r0, r3-12, fp0-fp13 are volatile
; uInput = r3
; Result in r3
;

	EXPORT set_PowerPC_rounding__6BurgerFQ26Burger16ePowerPCRounding[DS]
	EXPORT set_PowerPC_rounding__6BurgerFQ26Burger16ePowerPCRounding[PR]

	TOC
	tc		set_PowerPC_rounding__6BurgerFQ26Burger16ePowerPCRounding[TC], set_PowerPC_rounding__6BurgerFQ26Burger16ePowerPCRounding[DS]

	CSECT	set_PowerPC_rounding__6BurgerFQ26Burger16ePowerPCRounding[DS]
	dc.l	.set_PowerPC_rounding__6BurgerFQ26Burger16ePowerPCRounding[PR]
	dc.l	TOC[tc0]

	CSECT	.set_PowerPC_rounding__6BurgerFQ26Burger16ePowerPCRounding[PR]

; Get the floating point control register
	mffs	fp0

; Store it in memory
	stfd	fp0, -8(r1)

; Load into an integer register
	lwz		r4, -4(r1)

; Get the return value, mask off the lowest 2 bits (AND & 3)
	clrlwi	r5, r4, 30

; Move the lowest 2 bits into the existing value
	insrwi	r4, r3, 2, 30

; Store it in memory
	stw		r4, -4(r1)

; Reload the fp register
	lfd		fp0, -8(r1)

; Set the flags
	mtfsf	255, fp0

; Return the previous value
	mr		r3, r5

; Exit
	blr

	END
