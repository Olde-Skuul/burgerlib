;
; PowerPC assembly for Metrowerks Codewarrior
;
; Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com
;
; Build with PPCAsm in Metrowerks Codewarrior 10 for MacOSX Carbon
;
; double Burger::Ceil(double dInput) BURGER_NOEXCEPT
; r0, r3-12, fp0-fp13 are volatile
; dInput = fp1
; Result in fp1
;

	IMPORT g_dMinNoInteger__6Burger

	EXPORT Ceil__6BurgerFd[DS]
	EXPORT .Ceil__6BurgerFd[PR]

	TOC
	tc		Ceil__6BurgerFd[TC], Ceil__6BurgerFd[DS]
	tc		g_dMinNoInteger__6Burger[TC],g_dMinNoInteger__6Burger

	CSECT	Ceil__6BurgerFd[DS]
	dc.l	.Ceil__6BurgerFd[PR]
	dc.l	TOC[tc0]

	CSECT	.Ceil__6BurgerFd[PR]

; Get the address of g_dMinNoInteger
	lwz		r3, g_dMinNoInteger__6Burger[TC](RTOC)

; Get the abs value to test
	fabs	fp0, fp1

; Load 4503599627370496.0
	lfd		fp2, 0(r3)

; Check if it has no fraction
	fcmpu	cr0, fp0, fp2

; Exit with the original if no fraction is found
	bgelr

; Save the rounding register
	mffs	fp4

; Set bits 30 and 31 to Round toward +infinity
	mtfsfi	7, 0x02

; Push the positive number to highest value without fraction
; (Removes fraction)
	fadd	fp3, fp1, fp2

; Push the negative number to the lowest value without fraction
; (Removes fraction)
	fsub	fp0, fp1, fp2

; Undo the push (Fraction is gone)
	fsub	fp3, fp3, fp2

; Undo the push (Fraction is gone)
	fadd	fp0, fp0, fp2

; Which one to use? Positive or negative?
	fsel	fp1, fp1, fp3, fp0

; Restore rounding
	mtfsf	255, fp4

; Exit
	blr

	END
