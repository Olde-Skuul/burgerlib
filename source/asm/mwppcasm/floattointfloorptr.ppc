;
; PowerPC assembly for Metrowerks Codewarrior
;
; Copyright 1995-2023 by Rebecca Ann Heineman becky@burgerbecky.com
;
; Build with PPCAsm in Metrowerks Codewarrior 10 for MacOSX Carbon
;
; void Burger::float_to_int_floor(int32_t* pOutput, float fInput) BURGER_NOEXCEPT
; r0, r3-12, fp0-fp13 are volatile
; pOutput = r3
; fInput = fp1
;

	IMPORT g_fMinNoInteger__6Burger

	EXPORT float_to_int_floor__6BurgerFPlf[DS]
	EXPORT .float_to_int_floor__6BurgerFPlf[PR]

	TOC
	tc		float_to_int_floor__6BurgerFPlf[TC], float_to_int_floor__6BurgerFPlf[DS]
	tc		g_fMinNoInteger__6Burger[TC],g_fMinNoInteger__6Burger

	CSECT	float_to_int_floor__6BurgerFPlf[DS]
	dc.l	.float_to_int_floor__6BurgerFPlf[PR]
	dc.l	TOC[tc0]

	CSECT	.float_to_int_floor__6BurgerFPlf[PR]

; Get the address of g_fMinNoInteger
	lwz		r4, g_fMinNoInteger__6Burger[TC](RTOC)

; Save the rounding register
	mffs	fp4
	
; Load 8388608.0f
	lfs		fp2, 0(r4)
	
; Set bits 30 and 31 to Round toward -infinity
	mtfsfi	7, 0x03

; Push the positive number to highest value without fraction
	fadds	fp3, fp1, fp2

; Push the negative number to the lowest value without fraction
	fsubs	fp0, fp1, fp2

; Undo the push (Fraction is gone)
	fsubs	fp3, fp3, fp2
	
; Undo the push (Fraction is gone)
	fadds	fp0, fp0, fp2

; Which one to use? Positive or negative?
	fsel	fp1, fp1, fp3, fp0

; Restore rounding
	mtfsf	255, fp4

; Convert to integer
	fctiwz	fp1, fp1
	
; Store the integer
	stfiwx	fp1, 0, r3

	blr

	END
