;
; Swap the endian of a 64 bit float using a pointer
;
; Done in assembly, because that's how you know it's done right
; PowerPC PEF version
;

	INCLUDE 'macros.ppc'

;
; Unmangled function prototype
; double Burger::_swapendiandouble(const double*) BURGER_NOEXCEPT
;

	EXPORT _swapendiandouble__6BurgerFPCd[DS]
	EXPORT _swapendiandouble__6BurgerFPCd[PR]

	DeclareProc _swapendiandouble__6BurgerFPCd

	li		r5, 4
	lwbrx	r0, r0, r3		; Fetch it endian swap
	lwbrx	r4, r5, r3
	stw		r4, 24(SP)		; Save it on the stack
	stw		r0, 28(SP)
	lfd		fp1, 24(SP)		; Load it as a float
	blr

	END
