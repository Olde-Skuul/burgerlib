<?xml version="1.0" encoding="utf-8"?>

<!-- Targets file for compiling HLSL files -->
<!-- Copyright Rebecca Ann Heineman -->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<!-- Include the xml file that describes the menus in Visual Studio -->
	<ItemGroup>
		<PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml" />
		<AvailableItemName Include="HLSL">
			<Targets>_HLSL</Targets>
		</AvailableItemName>
	</ItemGroup>

	<!-- Send the output to the linkers -->
	<!-- Note: Disabled because this tool outputs headers -->
	<!-- instead of .obj files -->
	<!-- PropertyGroup>
		<ComputeLinkInputsTargets>$(ComputeLinkInputsTargets);ComputeHLSLOutput;</ComputeLinkInputsTargets>
		<ComputeLibInputsTargets>$(ComputeLibInputsTargets);ComputeHLSLOutput;</ComputeLibInputsTargets>
	</PropertyGroup -->

	<!-- Use the built-in XamlTaskFactory to perform the build processing -->
	<!-- Use the xml file to get the command line description -->
	<UsingTask TaskName="HLSL" TaskFactory="XamlTaskFactory"
		AssemblyName="Microsoft.Build.Tasks.v4.0">
		<Task>$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml</Task>
	</UsingTask>
	
	<!-- Describe building a HLSL target -->
	<!-- BeforeTargets = When to build (Found in hlsl.props) -->
	<!-- Condition = Build if a file is found -->
	<!-- Outputs = What file does this output? -->
	<!-- Inputs = Files that if modified, build -->
	<!-- DependsOnTargets = Get the list of files Visual Studio determined to build -->	
	
	<Target Name="_HLSL"
		BeforeTargets="$(HLSLBeforeTargets)"
		AfterTargets="$(HLSLAfterTargets)"
		Condition="'@(HLSL)' != ''"
		Outputs="%(HLSL.ObjectFileName);%(HLSL.HeaderFileName)"
		Inputs="%(HLSL.Identity);%(HLSL.AdditionalDependencies);$(MSBuildProjectFile)"
		DependsOnTargets="_SelectedFiles">
		
		<!-- Remove files that weren't selected -->
		<ItemGroup Condition="'@(SelectedFiles)' != ''">
			<HLSL Remove="@(HLSL)" Condition="'%(Identity)' != '@(SelectedFiles)'" />
		</ItemGroup>
		
		<!-- Collect the dependency information -->
		<ItemGroup>
			<HLSL_tlog Include="%(HLSL.ObjectFileName)" Condition="'%(HLSL.ObjectFileName)' != '' and '%(HLSL.ExcludedFromBuild)' != 'true'">
				<Source>@(HLSL, '|')</Source>
			</HLSL_tlog>
		</ItemGroup>
		
		<!-- Message to print when the file is compiled -->
		<Message Importance="High" Text="%(HLSL.ExecutionDescription)" />

		<!-- Write out the dependency information to $(ProjectName).write.1.tlog -->
		<!-- Use ^ to denote source files and full paths for output files for clean -->
		<WriteLinesToFile
			Condition="'@(HLSL_tlog)' != '' and '%(HLSL_tlog.ExcludedFromBuild)' != 'true'"
			File="$(IntDir)$(ProjectName).write.1.tlog"
			Encoding="utf-8"
			Lines="^%(HLSL_tlog.Source);@(HLSL_tlog-&gt;'%(Fullpath)')"/>

		<!-- Extract the variables declared in the XML file to prep for a build -->
		<HLSL Condition="'@(HLSL)' != '' and '%(HLSL.ExcludedFromBuild)' != 'true'"
			TargetProfile="%(HLSL.TargetProfile)"
			EntryPointName="%(HLSL.EntryPointName)"
			AdditionalIncludeDirectories="%(HLSL.AdditionalIncludeDirectories)"
			ShowIncludeProcess="%(HLSL.ShowIncludeProcess)"
			Optimization="%(HLSL.Optimization)"
			DisablePreshaders="%(HLSL.DisablePreshaders)"
			TreatWarningsAsErrors="%(HLSL.TreatWarningsAsErrors)"
			DisableValidation="%(HLSL.DisableValidation)"
			GenerateDebugInformation="%(HLSL.GenerateDebugInformation)"
			MatricesPacking="%(HLSL.MatricesPacking)"
			ForcePartialPrecision="%(HLSL.ForcePartialPrecision)"
			FlowControl="%(HLSL.FlowControl)"
			DisableEffectPerformanceMode="%(HLSL.DisableEffectPerformanceMode)"
			EnableStrictMode="%(HLSL.EnableStrictMode)"
			EnableBackwardsCompatibility="%(HLSL.EnableBackwardsCompatibility)"
			ForceIEEEStrictness="%(HLSL.ForceIEEEStrictness)"
			CompileChildFx4="%(HLSL.CompileChildFx4)"
			ObjectFileName="%(HLSL.ObjectFileName)"
			AssemblerOutput="%(HLSL.AssemblerOutput)"
			AssemblyListingFileName="%(HLSL.AssemblyListingFileName)"
			HeaderFileName="%(HLSL.HeaderFileName)"
			GenerateWarningFile="%(HLSL.GenerateWarningFile)"
			WarningsFileName="%(HLSL.WarningsFileName)"
			VariableName="%(HLSL.VariableName)"
			ColorCodeAssembly="%(HLSL.ColorCodeAssembly)"
			OutputInstructionNumbers="%(HLSL.OutputInstructionNumbers)"
			GeneratePreprocessedSourceListing="%(HLSL.GeneratePreprocessedSourceListing)"
			PreprocessedSourceListingName="%(HLSL.PreprocessedSourceListingName)"
			StripReflectionData="%(HLSL.StripReflectionData)"
			StripDebugInformation="%(HLSL.StripDebugInformation)"
			CompressDX10="%(HLSL.CompressDX10)"
			DecompressDX10="%(HLSL.DecompressDX10)"
			PreprocessorDefinitions="%(HLSL.PreprocessorDefinitions)"
			LoadDX931="%(HLSL.LoadDX931)"
			NoLogo="%(HLSL.NoLogo)"

			AdditionalOptions="%(HLSL.AdditionalOptions)"
			CommandLineTemplate="%(HLSL.CommandLineTemplate)"
			Inputs="%(HLSL.Identity)" />
	</Target>
	
	<!-- Create a list of .obj files to send to the linkers -->
	<!-- Removed due to no .obj files output 
	<Target Name="ComputeHLSLOutput" Condition="'@(HLSL)' != ''">
		<ItemGroup>
			<Link Include="@(HLSL->Metadata('ObjectFileName')->Distinct()->ClearMetadata())" Condition="'%(HLSL.ExcludedFromBuild)' != 'true'"/>
			<Lib Include="@(HLSL->Metadata('ObjectFileName')->Distinct()->ClearMetadata())" Condition="'%(HLSL.ExcludedFromBuild)' != 'true'"/>
		</ItemGroup>
	</Target>
	-->	

</Project>
