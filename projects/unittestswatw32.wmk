#
# Build unittests with WMAKE
# Generated with makeprojects.watcom
#
# This file requires the environment variable WATCOM set to the OpenWatcom
# folder
# Example: WATCOM=C:\WATCOM
#

#
# Test for required environment variables
#

!ifndef %DXSDK_DIR
!error The environment variable DXSDK_DIR was not declared
!endif

!ifndef %WATCOM
!error The environment variable WATCOM was not declared
!endif

#
# Set the set of known files supported
# Note: They are in the reverse order of building. .x86 is built first, then .c
# until the .exe or .lib files are built
#

.extensions:
.extensions: .exe .exp .lib .obj .cpp .c .x86 .i86 .h .res .rc

#
# This speeds up the building process for Watcom because it keeps the apps in
# memory and doesn't have to reload for every source file
# Note: There is a bug that if the wlib app is loaded, it will not
# get the proper WOW file if a full build is performed
#
# The bug is gone from Watcom 1.2
#

!ifdef %WATCOM
!ifdef __LOADDLL__
!loaddll wcc $(%WATCOM)/binnt/wccd
!loaddll wccaxp $(%WATCOM)/binnt/wccdaxp
!loaddll wcc386 $(%WATCOM)/binnt/wccd386
!loaddll wpp $(%WATCOM)/binnt/wppdi86
!loaddll wppaxp $(%WATCOM)/binnt/wppdaxp
!loaddll wpp386 $(%WATCOM)/binnt/wppd386
!loaddll wlink $(%WATCOM)/binnt/wlinkd
!loaddll wlib $(%WATCOM)/binnt/wlibd
!endif
!endif

#
# Custom output files
#

EXTRA_OBJS= ../source/graphics/shadersdx9/Generated/pscclr4dx9.h &
	../source/graphics/shadersdx9/Generated/pstex2clr4dx9.h &
	../source/graphics/shadersdx9/Generated/pstexturecolordx9.h &
	../source/graphics/shadersdx9/Generated/pstexturedx9.h &
	../source/graphics/shadersdx9/Generated/vs20pos22ddx9.h &
	../source/graphics/shadersdx9/Generated/vs20pos2tex2clr42ddx9.h &
	../source/graphics/shadersdx9/Generated/vs20sprite2ddx9.h &
	../source/graphics/shadersdx9/Generated/vsstaticpositiondx9.h &
	../source/graphics/shadersopengl/Generated/pscclr4gl.h &
	../source/graphics/shadersopengl/Generated/pstex2clr4gl.h &
	../source/graphics/shadersopengl/Generated/pstexturecolorgl.h &
	../source/graphics/shadersopengl/Generated/pstexturegl.h &
	../source/graphics/shadersopengl/Generated/vs20pos22dgl.h &
	../source/graphics/shadersopengl/Generated/vs20pos2tex2clr42dgl.h &
	../source/graphics/shadersopengl/Generated/vs20sprite2dgl.h &
	../source/graphics/shadersopengl/Generated/vsstaticpositiongl.h &
	../source/platforms/windows/Generated/ps20display8bitdx9.h

#
# List the names of all of the final binaries to build and clean
#

all: Debug Internal Release .SYMBOLIC
	@%null

clean: clean_Debug clean_Internal clean_Release .SYMBOLIC
	@%null

#
# Configurations
#

Debug: Debugw32 .SYMBOLIC
	@%null

clean_Debug: clean_Debugw32 .SYMBOLIC
	@%null

Internal: Internalw32 .SYMBOLIC
	@%null

clean_Internal: clean_Internalw32 .SYMBOLIC
	@%null

Release: Releasew32 .SYMBOLIC
	@%null

clean_Release: clean_Releasew32 .SYMBOLIC
	@%null

#
# Platforms
#

w32: Debugw32 Internalw32 Releasew32 .SYMBOLIC
	@%null

clean_w32: clean_Debugw32 clean_Internalw32 clean_Releasew32 .SYMBOLIC
	@%null

#
# List of binaries to build or clean
#

Debugw32: .SYMBOLIC
	@if not exist bin @mkdir bin
	@if not exist "temp\unittestswatw32dbg" @mkdir "temp\unittestswatw32dbg"
	@set CONFIG=Debug
	@set TARGET=w32
	@%make bin\unittestswatw32dbg.exe

clean_Debugw32: .SYMBOLIC
	@rm -f $(EXTRA_OBJS)
	@if exist temp\unittestswatw32dbg @rmdir /s /q temp\unittestswatw32dbg
	@if exist bin\unittestswatw32dbg.exe @del /q bin\unittestswatw32dbg.exe
	@-if exist bin @rmdir bin 2>NUL
	@-if exist temp @rmdir temp 2>NUL

Internalw32: .SYMBOLIC
	@if not exist bin @mkdir bin
	@if not exist "temp\unittestswatw32int" @mkdir "temp\unittestswatw32int"
	@set CONFIG=Internal
	@set TARGET=w32
	@%make bin\unittestswatw32int.exe

clean_Internalw32: .SYMBOLIC
	@rm -f $(EXTRA_OBJS)
	@if exist temp\unittestswatw32int @rmdir /s /q temp\unittestswatw32int
	@if exist bin\unittestswatw32int.exe @del /q bin\unittestswatw32int.exe
	@-if exist bin @rmdir bin 2>NUL
	@-if exist temp @rmdir temp 2>NUL

Releasew32: .SYMBOLIC
	@if not exist bin @mkdir bin
	@if not exist "temp\unittestswatw32rel" @mkdir "temp\unittestswatw32rel"
	@set CONFIG=Release
	@set TARGET=w32
	@%make bin\unittestswatw32rel.exe

clean_Releasew32: .SYMBOLIC
	@rm -f $(EXTRA_OBJS)
	@if exist temp\unittestswatw32rel @rmdir /s /q temp\unittestswatw32rel
	@if exist bin\unittestswatw32rel.exe @del /q bin\unittestswatw32rel.exe
	@-if exist bin @rmdir bin 2>NUL
	@-if exist temp @rmdir temp 2>NUL

#
# Create the folder for the binary output
#

bin:
	@if not exist bin @mkdir bin

temp:
	@if not exist temp @mkdir temp

#
# Disable building this make file
#

unittestswatw32.wmk:
	@%null

#
# Default configuration
#

!ifndef CONFIG
CONFIG = Release
!endif

#
# Default target
#

!ifndef TARGET
TARGET = w32
!endif

#
# Directory name fragments
#

TARGET_SUFFIX_w32 = w32

CONFIG_SUFFIX_Debug = dbg
CONFIG_SUFFIX_Internal = int
CONFIG_SUFFIX_Release = rel

#
# Base name of the temp directory
#

BASE_TEMP_DIR = temp\unittests
BASE_SUFFIX = wat$(TARGET_SUFFIX_$(%TARGET))$(CONFIG_SUFFIX_$(%CONFIG))
TEMP_DIR = temp\unittests$(BASE_SUFFIX)

#
# SOURCE_DIRS = Work directories for the source code
#

SOURCE_DIRS =../source
SOURCE_DIRS +=;../source/ansi
SOURCE_DIRS +=;../source/asm/wasm
SOURCE_DIRS +=;../source/audio
SOURCE_DIRS +=;../source/commandline
SOURCE_DIRS +=;../source/compression
SOURCE_DIRS +=;../source/file
SOURCE_DIRS +=;../source/flashplayer
SOURCE_DIRS +=;../source/generated
SOURCE_DIRS +=;../source/graphics
SOURCE_DIRS +=;../source/graphics/effects
SOURCE_DIRS +=;../source/graphics/shaders
SOURCE_DIRS +=;../source/graphics/shadersdx9
SOURCE_DIRS +=;../source/graphics/shadersdx9/generated
SOURCE_DIRS +=;../source/graphics/shadersopengl
SOURCE_DIRS +=;../source/graphics/shadersopengl/generated
SOURCE_DIRS +=;../source/graphics/vulkan
SOURCE_DIRS +=;../source/input
SOURCE_DIRS +=;../source/lowlevel
SOURCE_DIRS +=;../source/math
SOURCE_DIRS +=;../source/memory
SOURCE_DIRS +=;../source/platforms/windows
SOURCE_DIRS +=;../source/platforms/windows/generated
SOURCE_DIRS +=;../source/random
SOURCE_DIRS +=;../source/text
SOURCE_DIRS +=;../unittest

#
# INCLUDE_DIRS = Header includes
#

INCLUDE_DIRS = $(SOURCE_DIRS)
INCLUDE_DIRS +=;../sdks/windows/ddraw/Include
INCLUDE_DIRS +=;../sdks/windows/dplay/Include
INCLUDE_DIRS +=;$(%DXSDK_DIR)/Include
INCLUDE_DIRS +=;../sdks/windows/opengl
INCLUDE_DIRS +=;../sdks/steamworks/public/steam

#
# Tell WMAKE where to find the files to work with
#

.c: $(SOURCE_DIRS)
.cpp: $(SOURCE_DIRS)
.x86: $(SOURCE_DIRS)
.i86: $(SOURCE_DIRS)
.rc: $(SOURCE_DIRS)

#
# Set the compiler flags for each of the build types
#

CFlagsDebugw32= -bm -bt=NT -dTYPE_BOOL=1 -dTARGET_CPU_X86=1 -dTARGET_OS_WIN32=1 -i="$(%WATCOM)/h;$(%WATCOM)/h/nt;$(%WATCOM)/h/nt/directx" -d0 -od -D_DEBUG -D_WINDOWS -DWIN32_LEAN_AND_MEAN -DWIN32 -D_CONSOLE -DIDIRECTPLAY2_OR_GREATER -DDIRECTDRAW_VERSION=0x700 -DWINVER=0x0600 -D_WIN32_WINNT=0x0600 -DNTDDI_VERSION=0x05010000 -DD3D11_NO_HELPERS -DGLUT_DISABLE_ATEXIT_HACK
CFlagsInternalw32= -bm -bt=NT -dTYPE_BOOL=1 -dTARGET_CPU_X86=1 -dTARGET_OS_WIN32=1 -i="$(%WATCOM)/h;$(%WATCOM)/h/nt;$(%WATCOM)/h/nt/directx" -d0 -oaxsh -D_DEBUG -D_WINDOWS -DWIN32_LEAN_AND_MEAN -DWIN32 -D_CONSOLE -DIDIRECTPLAY2_OR_GREATER -DDIRECTDRAW_VERSION=0x700 -DWINVER=0x0600 -D_WIN32_WINNT=0x0600 -DNTDDI_VERSION=0x05010000 -DD3D11_NO_HELPERS -DGLUT_DISABLE_ATEXIT_HACK
CFlagsReleasew32= -bm -bt=NT -dTYPE_BOOL=1 -dTARGET_CPU_X86=1 -dTARGET_OS_WIN32=1 -i="$(%WATCOM)/h;$(%WATCOM)/h/nt;$(%WATCOM)/h/nt/directx" -d0 -oaxsh -DNDEBUG -D_WINDOWS -DWIN32_LEAN_AND_MEAN -DWIN32 -D_CONSOLE -DIDIRECTPLAY2_OR_GREATER -DDIRECTDRAW_VERSION=0x700 -DWINVER=0x0600 -D_WIN32_WINNT=0x0600 -DNTDDI_VERSION=0x05010000 -DD3D11_NO_HELPERS -DGLUT_DISABLE_ATEXIT_HACK

#
# Set the assembler flags for each of the build types
#

AFlagsDebugw32= -d__WIN32__=1 -D_DEBUG -D_WINDOWS -DWIN32_LEAN_AND_MEAN -DWIN32 -D_CONSOLE -DIDIRECTPLAY2_OR_GREATER -DDIRECTDRAW_VERSION=0x700 -DWINVER=0x0600 -D_WIN32_WINNT=0x0600 -DNTDDI_VERSION=0x05010000 -DD3D11_NO_HELPERS -DGLUT_DISABLE_ATEXIT_HACK
AFlagsInternalw32= -d__WIN32__=1 -D_DEBUG -D_WINDOWS -DWIN32_LEAN_AND_MEAN -DWIN32 -D_CONSOLE -DIDIRECTPLAY2_OR_GREATER -DDIRECTDRAW_VERSION=0x700 -DWINVER=0x0600 -D_WIN32_WINNT=0x0600 -DNTDDI_VERSION=0x05010000 -DD3D11_NO_HELPERS -DGLUT_DISABLE_ATEXIT_HACK
AFlagsReleasew32= -d__WIN32__=1 -DNDEBUG -D_WINDOWS -DWIN32_LEAN_AND_MEAN -DWIN32 -D_CONSOLE -DIDIRECTPLAY2_OR_GREATER -DDIRECTDRAW_VERSION=0x700 -DWINVER=0x0600 -D_WIN32_WINNT=0x0600 -DNTDDI_VERSION=0x05010000 -DD3D11_NO_HELPERS -DGLUT_DISABLE_ATEXIT_HACK

#
# Set the Linker flags for each of the build types
#

LFlagsDebugw32= system nt LIBRARY Kernel32.lib,Gdi32.lib,Shell32.lib,Ole32.lib,User32.lib,Advapi32.lib,version.lib,Ws2_32.lib,Comctl32.lib,WinMM.lib
LFlagsInternalw32= system nt LIBRARY Kernel32.lib,Gdi32.lib,Shell32.lib,Ole32.lib,User32.lib,Advapi32.lib,version.lib,Ws2_32.lib,Comctl32.lib,WinMM.lib
LFlagsReleasew32= system nt LIBRARY Kernel32.lib,Gdi32.lib,Shell32.lib,Ole32.lib,User32.lib,Advapi32.lib,version.lib,Ws2_32.lib,Comctl32.lib,WinMM.lib

#
# Set the Resource flags for each of the build types
#

RFlagsDebugw32= -bt=nt -i="$(%WATCOM)/h/nt" -D_DEBUG -D_WINDOWS -DWIN32_LEAN_AND_MEAN -DWIN32 -D_CONSOLE -DIDIRECTPLAY2_OR_GREATER -DDIRECTDRAW_VERSION=0x700 -DWINVER=0x0600 -D_WIN32_WINNT=0x0600 -DNTDDI_VERSION=0x05010000 -DD3D11_NO_HELPERS -DGLUT_DISABLE_ATEXIT_HACK
RFlagsInternalw32= -bt=nt -i="$(%WATCOM)/h/nt" -D_DEBUG -D_WINDOWS -DWIN32_LEAN_AND_MEAN -DWIN32 -D_CONSOLE -DIDIRECTPLAY2_OR_GREATER -DDIRECTDRAW_VERSION=0x700 -DWINVER=0x0600 -D_WIN32_WINNT=0x0600 -DNTDDI_VERSION=0x05010000 -DD3D11_NO_HELPERS -DGLUT_DISABLE_ATEXIT_HACK
RFlagsReleasew32= -bt=nt -i="$(%WATCOM)/h/nt" -DNDEBUG -D_WINDOWS -DWIN32_LEAN_AND_MEAN -DWIN32 -D_CONSOLE -DIDIRECTPLAY2_OR_GREATER -DDIRECTDRAW_VERSION=0x700 -DWINVER=0x0600 -D_WIN32_WINNT=0x0600 -DNTDDI_VERSION=0x05010000 -DD3D11_NO_HELPERS -DGLUT_DISABLE_ATEXIT_HACK

# Now, set the compiler flags

CL=WCC386 -6r -fp6 -w4 -ei -j -mf -zq -zp=8 -wcd=7 -i="$(INCLUDE_DIRS)"
CP=WPP386 -6r -fp6 -w4 -ei -j -mf -zq -zp=8 -wcd=7 -i="$(INCLUDE_DIRS)"
ASM=WASM -5r -fp6 -w4 -zq -d__WATCOM__=1
LINK=*WLINK option caseexact option quiet PATH $(%WATCOM)/binnt;$(%WATCOM)/binw;.
RC=WRC -ad -r -q -d__WATCOM__=1 -i="$(INCLUDE_DIRS)"

# Set the default build rules
# Requires ASM, CP to be set

# Macro expansion is on page 93 of the C/C++ Tools User's Guide
# $^* = C:\dir\target (No extension)
# $[* = C:\dir\dep (No extension)
# $^@ = C:\dir\target.ext
# $^: = C:\dir\

.rc.res : .AUTODEPEND
	@echo $[&.rc / $(%CONFIG) / $(%TARGET)
	@$(RC) $(RFlags$(%CONFIG)$(%TARGET)) $[*.rc -fo=$^@

.i86.obj : .AUTODEPEND
	@echo $[&.i86 / $(%CONFIG) / $(%TARGET)
	@$(ASM) -0 -w4 -zq -d__WATCOM__=1 $(AFlags$(%CONFIG)$(%TARGET)) $[*.i86 -fo=$^@ -fr=$^*.err

.x86.obj : .AUTODEPEND
	@echo $[&.x86 / $(%CONFIG) / $(%TARGET)
	@$(ASM) $(AFlags$(%CONFIG)$(%TARGET)) $[*.x86 -fo=$^@ -fr=$^*.err

.c.obj : .AUTODEPEND
	@echo $[&.c / $(%CONFIG) / $(%TARGET)
	@$(CL) $(CFlags$(%CONFIG)$(%TARGET)) $[*.c -fo=$^@ -fr=$^*.err

.cpp.obj : .AUTODEPEND
	@echo $[&.cpp / $(%CONFIG) / $(%TARGET)
	@$(CP) $(CFlags$(%CONFIG)$(%TARGET)) $[*.cpp -fo=$^@ -fr=$^*.err

#
# Object files to work with for the project
#

OBJS= $(A)/bitreverse32.obj &
	$(A)/bitreverse64.obj &
	$(A)/bradler16.obj &
	$(A)/bradler32.obj &
	$(A)/bralaw.obj &
	$(A)/bralgorithm.obj &
	$(A)/brargumenttype.obj &
	$(A)/brarray.obj &
	$(A)/brasciito.obj &
	$(A)/brassert.obj &
	$(A)/bratomic.obj &
	$(A)/brautorepeat.obj &
	$(A)/brbase.obj &
	$(A)/brcapturestdout.obj &
	$(A)/brcodelibrary.obj &
	$(A)/brcodelibrarywindows.obj &
	$(A)/brcodepage.obj &
	$(A)/brcommandparameter.obj &
	$(A)/brcommandparameterbooltrue.obj &
	$(A)/brcommandparameterstring.obj &
	$(A)/brcommandparameterwordptr.obj &
	$(A)/brcompress.obj &
	$(A)/brcompressdeflate.obj &
	$(A)/brcompresslbmrle.obj &
	$(A)/brcompresslzss.obj &
	$(A)/brconditionvariable.obj &
	$(A)/brconditionvariablewindows.obj &
	$(A)/brconsolemanager.obj &
	$(A)/brconsolemanagerwindows.obj &
	$(A)/brcrc16.obj &
	$(A)/brcrc32.obj &
	$(A)/brdebug.obj &
	$(A)/brdebugwindows.obj &
	$(A)/brdecompress.obj &
	$(A)/brdecompressdeflate.obj &
	$(A)/brdecompresslbmrle.obj &
	$(A)/brdecompresslzss.obj &
	$(A)/brdetectmultilaunch.obj &
	$(A)/brdetectmultilaunchwindows.obj &
	$(A)/brdirectorysearch.obj &
	$(A)/brdirectorysearchwindows.obj &
	$(A)/brdisplay.obj &
	$(A)/brdisplaybasewindows.obj &
	$(A)/brdisplaydibsoftware8windows.obj &
	$(A)/brdisplaydibwindows.obj &
	$(A)/brdisplaydirectx11windows.obj &
	$(A)/brdisplaydirectx9software8windows.obj &
	$(A)/brdisplaydirectx9windows.obj &
	$(A)/brdisplayobject.obj &
	$(A)/brdisplayopengl.obj &
	$(A)/brdisplayopenglsoftware8.obj &
	$(A)/brdisplayopenglwindows.obj &
	$(A)/brdjb2hash.obj &
	$(A)/brdoublelinkedlist.obj &
	$(A)/brdxt1.obj &
	$(A)/brdxt3.obj &
	$(A)/brdxt5.obj &
	$(A)/brearcliptriangulate.obj &
	$(A)/breffect.obj &
	$(A)/breffect2d.obj &
	$(A)/breffectpositiontexturecolor.obj &
	$(A)/breffectstaticpositiontexture.obj &
	$(A)/brendian.obj &
	$(A)/brerror.obj &
	$(A)/brfile.obj &
	$(A)/brfileansihelpers.obj &
	$(A)/brfileapf.obj &
	$(A)/brfilebmp.obj &
	$(A)/brfiledds.obj &
	$(A)/brfilegif.obj &
	$(A)/brfileini.obj &
	$(A)/brfilelbm.obj &
	$(A)/brfilemanager.obj &
	$(A)/brfilemanagerwindows.obj &
	$(A)/brfilemp3.obj &
	$(A)/brfilename.obj &
	$(A)/brfilenamewindows.obj &
	$(A)/brfilepcx.obj &
	$(A)/brfilepng.obj &
	$(A)/brfiletga.obj &
	$(A)/brfilewindows.obj &
	$(A)/brfilexml.obj &
	$(A)/brfixedmatrix3d.obj &
	$(A)/brfixedmatrix4d.obj &
	$(A)/brfixedpoint.obj &
	$(A)/brfixedvector2d.obj &
	$(A)/brfixedvector3d.obj &
	$(A)/brfixedvector4d.obj &
	$(A)/brflashaction.obj &
	$(A)/brflashactionvalue.obj &
	$(A)/brflashavm2.obj &
	$(A)/brflashcolortransform.obj &
	$(A)/brflashdisasmactionscript.obj &
	$(A)/brflashmanager.obj &
	$(A)/brflashmatrix23.obj &
	$(A)/brflashrect.obj &
	$(A)/brflashrgba.obj &
	$(A)/brflashstream.obj &
	$(A)/brflashutils.obj &
	$(A)/brfloatingpoint.obj &
	$(A)/brfont.obj &
	$(A)/brfont4bit.obj &
	$(A)/brfphalf.obj &
	$(A)/brfpinfo.obj &
	$(A)/brfplargeint.obj &
	$(A)/brfpprintinfo.obj &
	$(A)/brgameapp.obj &
	$(A)/brglobalmemorymanager.obj &
	$(A)/brglobals.obj &
	$(A)/brglobalsshimswindows.obj &
	$(A)/brglobalswindows.obj &
	$(A)/brgost.obj &
	$(A)/brgridindex.obj &
	$(A)/brguid.obj &
	$(A)/brguidwindows.obj &
	$(A)/brhashmap.obj &
	$(A)/brimage.obj &
	$(A)/brimportit.obj &
	$(A)/brimports3m.obj &
	$(A)/brimportxm.obj &
	$(A)/brinputmemorystream.obj &
	$(A)/brintrinsics.obj &
	$(A)/brisolatin1.obj &
	$(A)/brjoypad.obj &
	$(A)/brjoypadwindows.obj &
	$(A)/brkeyboard.obj &
	$(A)/brkeyboardwindows.obj &
	$(A)/brlastinfirstout.obj &
	$(A)/brlinkedlistobject.obj &
	$(A)/brlinkedlistpointer.obj &
	$(A)/brlocalization.obj &
	$(A)/brmace.obj &
	$(A)/brmacromanus.obj &
	$(A)/brmatrix3d.obj &
	$(A)/brmatrix4d.obj &
	$(A)/brmd2.obj &
	$(A)/brmd4.obj &
	$(A)/brmd5.obj &
	$(A)/brmemoryansi.obj &
	$(A)/brmemoryfunctions.obj &
	$(A)/brmemoryhandle.obj &
	$(A)/brmemorymanager.obj &
	$(A)/brmemorymanagerwindows.obj &
	$(A)/brmersennetwist.obj &
	$(A)/brmicrosoftadpcm.obj &
	$(A)/brmouse.obj &
	$(A)/brmousewindows.obj &
	$(A)/brmutex.obj &
	$(A)/brmutexwindows.obj &
	$(A)/brnumberstring.obj &
	$(A)/brnumberstringhex.obj &
	$(A)/brnumberto.obj &
	$(A)/broscursor.obj &
	$(A)/broscursorwindows.obj &
	$(A)/brosstringfunctions.obj &
	$(A)/brosstringfunctionswindows.obj &
	$(A)/broutputmemorystream.obj &
	$(A)/brpackfloat.obj &
	$(A)/brpair.obj &
	$(A)/brpalette.obj &
	$(A)/brperforce.obj &
	$(A)/brperforcewindows.obj &
	$(A)/brpoint2d.obj &
	$(A)/brpoint2dwindows.obj &
	$(A)/brpoweroftwo.obj &
	$(A)/brprintf.obj &
	$(A)/brqueue.obj &
	$(A)/brrandom.obj &
	$(A)/brrandombase.obj &
	$(A)/brrect.obj &
	$(A)/brrectwindows.obj &
	$(A)/brrecursivemutex.obj &
	$(A)/brrenderer.obj &
	$(A)/brrenderersoftware16.obj &
	$(A)/brrenderersoftware8.obj &
	$(A)/brrezfile.obj &
	$(A)/brrunqueue.obj &
	$(A)/brsdbmhash.obj &
	$(A)/brsemaphore.obj &
	$(A)/brsemaphorewindows.obj &
	$(A)/brsequencer.obj &
	$(A)/brsequencerwindows.obj &
	$(A)/brsha1.obj &
	$(A)/brshader2dccolor.obj &
	$(A)/brshader2dcolorvertex.obj &
	$(A)/brshaders.obj &
	$(A)/brshape8bit.obj &
	$(A)/brsimplearray.obj &
	$(A)/brsimplestring.obj &
	$(A)/brsinecosine.obj &
	$(A)/brsmartpointer.obj &
	$(A)/brsound.obj &
	$(A)/brsoundbufferrez.obj &
	$(A)/brsounddecompress.obj &
	$(A)/brsoundwindows.obj &
	$(A)/brstaticrtti.obj &
	$(A)/brstdouthelpers.obj &
	$(A)/brstdouthelperswindows.obj &
	$(A)/brstring.obj &
	$(A)/brstring16.obj &
	$(A)/brstring32.obj &
	$(A)/brstringfunctions.obj &
	$(A)/brstructs.obj &
	$(A)/brtemplates.obj &
	$(A)/brtexture.obj &
	$(A)/brtexturedirectx9.obj &
	$(A)/brtextureopengl.obj &
	$(A)/brthread.obj &
	$(A)/brthreadwindows.obj &
	$(A)/brtick.obj &
	$(A)/brtickwindows.obj &
	$(A)/brtimedate.obj &
	$(A)/brtimedatewindows.obj &
	$(A)/brtypes.obj &
	$(A)/brulaw.obj &
	$(A)/brunpackbytes.obj &
	$(A)/brutf16.obj &
	$(A)/brutf32.obj &
	$(A)/brutf8.obj &
	$(A)/brvector2d.obj &
	$(A)/brvector3d.obj &
	$(A)/brvector4d.obj &
	$(A)/brvectortypes.obj &
	$(A)/brvertexbuffer.obj &
	$(A)/brvertexbufferdirextx9.obj &
	$(A)/brvertexbufferopengl.obj &
	$(A)/brvulkanerrors.obj &
	$(A)/brwin1252.obj &
	$(A)/brwin437.obj &
	$(A)/brwindowsapp.obj &
	$(A)/common.obj &
	$(A)/cpuid.obj &
	$(A)/cpuidex.obj &
	$(A)/floattofixedceil.obj &
	$(A)/floattofixedceilptr.obj &
	$(A)/floattofixedfloor.obj &
	$(A)/floattofixedfloorptr.obj &
	$(A)/floattofixedround.obj &
	$(A)/floattofixedroundptr.obj &
	$(A)/floattointceil.obj &
	$(A)/floattointceilptr.obj &
	$(A)/floattointfloor.obj &
	$(A)/floattointfloorptr.obj &
	$(A)/floattointround.obj &
	$(A)/floattointroundptr.obj &
	$(A)/get8087precision.obj &
	$(A)/get8087rounding.obj &
	$(A)/get_ceilingdouble.obj &
	$(A)/get_ceilingfloat.obj &
	$(A)/get_floordouble.obj &
	$(A)/get_floorfloat.obj &
	$(A)/get_rounddouble.obj &
	$(A)/get_roundfloat.obj &
	$(A)/get_sign_bitdouble.obj &
	$(A)/get_sign_bitfloat.obj &
	$(A)/get_signdouble.obj &
	$(A)/get_signfloat.obj &
	$(A)/has_cpuid.obj &
	$(A)/modulo_radiansdouble.obj &
	$(A)/modulo_radiansfloat.obj &
	$(A)/poweroftwo32.obj &
	$(A)/poweroftwo64.obj &
	$(A)/set8087precision.obj &
	$(A)/set8087rounding.obj &
	$(A)/swapendiandouble.obj &
	$(A)/swapendiandoubleptr.obj &
	$(A)/swapendianfloat.obj &
	$(A)/swapendianfloatptr.obj &
	$(A)/testbralgorithm.obj &
	$(A)/testbrcodelibrary.obj &
	$(A)/testbrcompression.obj &
	$(A)/testbrdisplay.obj &
	$(A)/testbrendian.obj &
	$(A)/testbrfileloaders.obj &
	$(A)/testbrfilemanager.obj &
	$(A)/testbrfixedpoint.obj &
	$(A)/testbrfloatingpoint.obj &
	$(A)/testbrhashes.obj &
	$(A)/testbrmatrix3d.obj &
	$(A)/testbrmatrix4d.obj &
	$(A)/testbrnumberto.obj &
	$(A)/testbrpoweroftwo.obj &
	$(A)/testbrprintf.obj &
	$(A)/testbrstaticrtti.obj &
	$(A)/testbrstrings.obj &
	$(A)/testbrtimedate.obj &
	$(A)/testbrtypes.obj &
	$(A)/testcharset.obj &
	$(A)/testmacros.obj &
	$(A)/win_d3d11.obj &
	$(A)/win_d3d9.obj &
	$(A)/win_ddraw.obj &
	$(A)/win_dinput.obj &
	$(A)/win_directxdata.obj &
	$(A)/win_dplay.obj &
	$(A)/win_dsound.obj &
	$(A)/win_error.obj &
	$(A)/win_globals.obj &
	$(A)/win_hid.obj &
	$(A)/win_kernel32.obj &
	$(A)/win_launcher.obj &
	$(A)/win_loadlibrary.obj &
	$(A)/win_memorymanager.obj &
	$(A)/win_platformshims.obj &
	$(A)/win_registry.obj &
	$(A)/win_rpcrt4.obj &
	$(A)/win_setupapi.obj &
	$(A)/win_shell32.obj &
	$(A)/win_shlwapi.obj &
	$(A)/win_synchapi.obj &
	$(A)/win_user32.obj &
	$(A)/win_version.obj &
	$(A)/win_winmm.obj &
	$(A)/win_winutils.obj &
	$(A)/win_xinput.obj

#
# Resource files to work with for the project
#

RC_OBJS=

#
# Build custom files
#

../source/graphics/shadersdx9/Generated/pscclr4dx9.h : ../source/graphics/shadersdx9/pscclr4dx9.hlsl
	@echo fxc pscclr4dx9.hlsl...
	@cmd /c & "$(%DXSDK_DIR)utilities\bin\x86\fxc.exe" "../source/graphics/shadersdx9/pscclr4dx9.hlsl" /nologo /O3 /Zpc /Gfp /Tps_2_0 /Fh"../source/graphics/shadersdx9/Generated\pscclr4dx9.h" /Vng_pscclr4dx9

../source/graphics/shadersdx9/Generated/pstex2clr4dx9.h : ../source/graphics/shadersdx9/pstex2clr4dx9.hlsl
	@echo fxc pstex2clr4dx9.hlsl...
	@cmd /c & "$(%DXSDK_DIR)utilities\bin\x86\fxc.exe" "../source/graphics/shadersdx9/pstex2clr4dx9.hlsl" /nologo /O3 /Zpc /Gfp /Tps_2_0 /Fh"../source/graphics/shadersdx9/Generated\pstex2clr4dx9.h" /Vng_pstex2clr4dx9

../source/graphics/shadersdx9/Generated/pstexturecolordx9.h : ../source/graphics/shadersdx9/pstexturecolordx9.hlsl
	@echo fxc pstexturecolordx9.hlsl...
	@cmd /c & "$(%DXSDK_DIR)utilities\bin\x86\fxc.exe" "../source/graphics/shadersdx9/pstexturecolordx9.hlsl" /nologo /O3 /Zpc /Gfp /Tps_2_0 /Fh"../source/graphics/shadersdx9/Generated\pstexturecolordx9.h" /Vng_pstexturecolordx9

../source/graphics/shadersdx9/Generated/pstexturedx9.h : ../source/graphics/shadersdx9/pstexturedx9.hlsl
	@echo fxc pstexturedx9.hlsl...
	@cmd /c & "$(%DXSDK_DIR)utilities\bin\x86\fxc.exe" "../source/graphics/shadersdx9/pstexturedx9.hlsl" /nologo /O3 /Zpc /Gfp /Tps_2_0 /Fh"../source/graphics/shadersdx9/Generated\pstexturedx9.h" /Vng_pstexturedx9

../source/graphics/shadersdx9/Generated/vs20pos22ddx9.h : ../source/graphics/shadersdx9/vs20pos22ddx9.hlsl
	@echo fxc vs20pos22ddx9.hlsl...
	@cmd /c & "$(%DXSDK_DIR)utilities\bin\x86\fxc.exe" "../source/graphics/shadersdx9/vs20pos22ddx9.hlsl" /nologo /O3 /Zpc /Gfp /Tvs_2_0 /Fh"../source/graphics/shadersdx9/Generated\vs20pos22ddx9.h" /Vng_vs20pos22ddx9

../source/graphics/shadersdx9/Generated/vs20pos2tex2clr42ddx9.h : ../source/graphics/shadersdx9/vs20pos2tex2clr42ddx9.hlsl
	@echo fxc vs20pos2tex2clr42ddx9.hlsl...
	@cmd /c & "$(%DXSDK_DIR)utilities\bin\x86\fxc.exe" "../source/graphics/shadersdx9/vs20pos2tex2clr42ddx9.hlsl" /nologo /O3 /Zpc /Gfp /Tvs_2_0 /Fh"../source/graphics/shadersdx9/Generated\vs20pos2tex2clr42ddx9.h" /Vng_vs20pos2tex2clr42ddx9

../source/graphics/shadersdx9/Generated/vs20sprite2ddx9.h : ../source/graphics/shadersdx9/vs20sprite2ddx9.hlsl
	@echo fxc vs20sprite2ddx9.hlsl...
	@cmd /c & "$(%DXSDK_DIR)utilities\bin\x86\fxc.exe" "../source/graphics/shadersdx9/vs20sprite2ddx9.hlsl" /nologo /O3 /Zpc /Gfp /Tvs_2_0 /Fh"../source/graphics/shadersdx9/Generated\vs20sprite2ddx9.h" /Vng_vs20sprite2ddx9

../source/graphics/shadersdx9/Generated/vsstaticpositiondx9.h : ../source/graphics/shadersdx9/vsstaticpositiondx9.hlsl
	@echo fxc vsstaticpositiondx9.hlsl...
	@cmd /c & "$(%DXSDK_DIR)utilities\bin\x86\fxc.exe" "../source/graphics/shadersdx9/vsstaticpositiondx9.hlsl" /nologo /O3 /Zpc /Gfp /Tvs_2_0 /Fh"../source/graphics/shadersdx9/Generated\vsstaticpositiondx9.h" /Vng_vsstaticpositiondx9

../source/graphics/shadersopengl/Generated/pscclr4gl.h : ../source/graphics/shadersopengl/pscclr4gl.glsl
	@echo Stripcomments pscclr4gl.glsl...
	@cmd /c & ..\tools\windows\x64\stripcomments "../source/graphics/shadersopengl/pscclr4gl.glsl" -c "../source/graphics/shadersopengl/Generated\pscclr4gl.h" -l g_pscclr4gl

../source/graphics/shadersopengl/Generated/pstex2clr4gl.h : ../source/graphics/shadersopengl/pstex2clr4gl.glsl
	@echo Stripcomments pstex2clr4gl.glsl...
	@cmd /c & ..\tools\windows\x64\stripcomments "../source/graphics/shadersopengl/pstex2clr4gl.glsl" -c "../source/graphics/shadersopengl/Generated\pstex2clr4gl.h" -l g_pstex2clr4gl

../source/graphics/shadersopengl/Generated/pstexturecolorgl.h : ../source/graphics/shadersopengl/pstexturecolorgl.glsl
	@echo Stripcomments pstexturecolorgl.glsl...
	@cmd /c & ..\tools\windows\x64\stripcomments "../source/graphics/shadersopengl/pstexturecolorgl.glsl" -c "../source/graphics/shadersopengl/Generated\pstexturecolorgl.h" -l g_pstexturecolorgl

../source/graphics/shadersopengl/Generated/pstexturegl.h : ../source/graphics/shadersopengl/pstexturegl.glsl
	@echo Stripcomments pstexturegl.glsl...
	@cmd /c & ..\tools\windows\x64\stripcomments "../source/graphics/shadersopengl/pstexturegl.glsl" -c "../source/graphics/shadersopengl/Generated\pstexturegl.h" -l g_pstexturegl

../source/graphics/shadersopengl/Generated/vs20pos22dgl.h : ../source/graphics/shadersopengl/vs20pos22dgl.glsl
	@echo Stripcomments vs20pos22dgl.glsl...
	@cmd /c & ..\tools\windows\x64\stripcomments "../source/graphics/shadersopengl/vs20pos22dgl.glsl" -c "../source/graphics/shadersopengl/Generated\vs20pos22dgl.h" -l g_vs20pos22dgl

../source/graphics/shadersopengl/Generated/vs20pos2tex2clr42dgl.h : ../source/graphics/shadersopengl/vs20pos2tex2clr42dgl.glsl
	@echo Stripcomments vs20pos2tex2clr42dgl.glsl...
	@cmd /c & ..\tools\windows\x64\stripcomments "../source/graphics/shadersopengl/vs20pos2tex2clr42dgl.glsl" -c "../source/graphics/shadersopengl/Generated\vs20pos2tex2clr42dgl.h" -l g_vs20pos2tex2clr42dgl

../source/graphics/shadersopengl/Generated/vs20sprite2dgl.h : ../source/graphics/shadersopengl/vs20sprite2dgl.glsl
	@echo Stripcomments vs20sprite2dgl.glsl...
	@cmd /c & ..\tools\windows\x64\stripcomments "../source/graphics/shadersopengl/vs20sprite2dgl.glsl" -c "../source/graphics/shadersopengl/Generated\vs20sprite2dgl.h" -l g_vs20sprite2dgl

../source/graphics/shadersopengl/Generated/vsstaticpositiongl.h : ../source/graphics/shadersopengl/vsstaticpositiongl.glsl
	@echo Stripcomments vsstaticpositiongl.glsl...
	@cmd /c & ..\tools\windows\x64\stripcomments "../source/graphics/shadersopengl/vsstaticpositiongl.glsl" -c "../source/graphics/shadersopengl/Generated\vsstaticpositiongl.h" -l g_vsstaticpositiongl

../source/platforms/windows/Generated/ps20display8bitdx9.h : ../source/platforms/windows/ps20display8bitdx9.hlsl
	@echo fxc ps20display8bitdx9.hlsl...
	@cmd /c & "$(%DXSDK_DIR)utilities\bin\x86\fxc.exe" "../source/platforms/windows/ps20display8bitdx9.hlsl" /nologo /O3 /Zpc /Gfp /Tps_2_0 /Fh"../source/platforms/windows/Generated\ps20display8bitdx9.h" /Vng_ps20display8bitdx9

#
# A = The object file temp folder
#

A = $(BASE_TEMP_DIR)watw32dbg
bin\unittestswatw32dbg.exe: $(EXTRA_OBJS) $+$(OBJS)$- unittestswatw32.wmk
	@SET WOW={$+$(OBJS)$-}
	@echo Performing link...
	@$(LINK) $(LFlagsDebugw32) NAME $^@ FILE @wow

A = $(BASE_TEMP_DIR)watw32int
bin\unittestswatw32int.exe: $(EXTRA_OBJS) $+$(OBJS)$- unittestswatw32.wmk
	@SET WOW={$+$(OBJS)$-}
	@echo Performing link...
	@$(LINK) $(LFlagsInternalw32) NAME $^@ FILE @wow

A = $(BASE_TEMP_DIR)watw32rel
bin\unittestswatw32rel.exe: $(EXTRA_OBJS) $+$(OBJS)$- unittestswatw32.wmk
	@SET WOW={$+$(OBJS)$-}
	@echo Performing link...
	@$(LINK) $(LFlagsReleasew32) NAME $^@ FILE @wow
